/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-03-16 04:25:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>Register-Đặng Văn Đa</title>\r\n");
      out.write("<link href=\"css/styleLogin2.css\" type=\"text/css\" rel=\"stylesheet\" media=\"all\">\r\n");
      out.write("<link href=\"css/bootstrap.min.css\" type=\"text/css\" rel=\"stylesheet\"\r\n");
      out.write("\tmedia=\"all\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- register modal -->\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n");
      out.write("\t\t<div class=\"modal-content\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t");

					if (request.getAttribute("emailChuaDK") != null) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<p class=\"modal-title\" style=\"color: red\">\r\n");
      out.write("\t\t\t\t\tEmail chưa đăng kí, mời đăng kí hoặc trở lại <a\r\n");
      out.write("\t\t\t\t\t\thref=\"LoginSystem.jsp\"> đăng nhập</a>\r\n");
      out.write("\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t");

					} else {
				
      out.write("\r\n");
      out.write("\t\t\t\t<h5 class=\"modal-title\" id=\"exampleModalLabel1\">Register</h5>\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t");

				String name = (String) request.getAttribute("name");
				String email = (String) request.getAttribute("email");
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t<form action=\"ControllerShopping?action=register\" method=\"post\" class=\"p-3\">\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"recipient-email\" class=\"col-form-label\">Email</label>\r\n");
      out.write("\t\t\t\t\t\t");

							if (email == null) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<input type=\"email\" class=\"form-control\" placeholder=\" \"\r\n");
      out.write("\t\t\t\t\t\t\tname=\"Email\" id=\"recipient-email\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");

							}
							if (email != null) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<input type=\"email\" class=\"form-control\" value=\"");
      out.print(email);
      out.write("\"\r\n");
      out.write("\t\t\t\t\t\t\tname=\"Email\" id=\"recipient-email\">\r\n");
      out.write("\t\t\t\t\t\t");

							}
						
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<!-- invalidation -->\r\n");
      out.write("\t\t\t\t\t\t");

							if (request.getAttribute("email_error_register") != null) {
								out.print("<font color=\"red\">" + (String) request.getAttribute("email_error_register") + "</font");

							}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"password1\" class=\"col-form-label\">Password</label> <input\r\n");
      out.write("\t\t\t\t\t\t\ttype=\"password\" class=\"form-control\" placeholder=\" \"\r\n");
      out.write("\t\t\t\t\t\t\tname=\"Password\" id=\"password1\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<!-- invalidation -->\r\n");
      out.write("\t\t\t\t\t\t");

							if (request.getAttribute("pass_error_register") != null) {
								out.print("<font color=\"red\">" + (String) request.getAttribute("pass_error_register") + "</font");

							}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"password2\" class=\"col-form-label\">Confirm\r\n");
      out.write("\t\t\t\t\t\t\tPassword</label> <input type=\"password\" class=\"form-control\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\" \" name=\"ConfirmPassword\" id=\"password2\">\r\n");
      out.write("\t\t\t\t\t\t");

							if (request.getAttribute("repass_error_register") != null) {
								out.print("<font color=\"red\">" + (String) request.getAttribute("repass_error_register") + "</font");

							}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");

							if (request.getAttribute("dont_register") != null) {
								out.print("<font color=\"red\">" + (String) request.getAttribute("dont_register") + "</font");

							}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"sub-w3l\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"sub-agile\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"brand2\" value=\"checking\"> <label\r\n");
      out.write("\t\t\t\t\t\t\t\tfor=\"brand2\" class=\"mb-3 text-dark\"> <span></span>I\r\n");
      out.write("\t\t\t\t\t\t\t\tAccept to the Terms & Conditions\r\n");
      out.write("\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"right-w3l\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"submit\" class=\"form-control\" value=\"Register\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- //register modal -->\r\n");
      out.write("\r\n");
      out.write("<!-- password-script -->\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\twindow.onload = function () {\r\n");
      out.write("\t\t\tdocument.getElementById(\"password1\").onchange = validatePassword;\r\n");
      out.write("\t\t\tdocument.getElementById(\"password2\").onchange = validatePassword;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tfunction validatePassword() {\r\n");
      out.write("\t\t\tvar pass2 = document.getElementById(\"password2\").value;\r\n");
      out.write("\t\t\tvar pass1 = document.getElementById(\"password1\").value;\r\n");
      out.write("\t\t\tif (pass1 != pass2)\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"password2\").setCustomValidity(\"Mật khẩu xác nhân không khớp\");\r\n");
      out.write("\t\t\telse\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"password2\").setCustomValidity('');\r\n");
      out.write("\t\t\t//empty string means no validation error\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<!-- //password-script -->\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
